version: '3.4'

services:
  nginx:
    restart: always
    image: nginx:alpine
    ports:
      - "8000:8000"
    volumes:
      - ./nginx/django.conf:/etc/nginx/conf.d/default.conf
      - ./lagos_bus_route/staticfiles:/static
    depends_on:
      - web

  db:
    restart: always
    environment:
      POSTGRES_USER_FILE: /run/secrets/psql-user
      POSTGRES_PASSWORD: /run/secrets/psql-pw
      POSTGRES_DB: /run/secrets/psql-db_name
    secrets:
      - psql-user
      - psql-pw
      - psql-db_name
    volumes:
      - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - lagos_bus_route-data:/var/lib/postgresql/data
    env_file: env-prod
    image: postgres:9.6
    expose:
      - "5432"

  redis:
    restart: always
    image: redis:3.2.11-alpine
    volumes:
      - lagos_bus_route-redis-data:/data
    expose:
      - "6379"

  web:
    restart: always
    depends_on:
      - db
    env_file: env-prod
    environment:
      - SERVICE=web
    expose:
      - "8000"
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        failure_action: rollback
        monitor: 5s

  celery:
    restart: always
    env_file: env-prod
    environment:
      - SERVICE=celery
    depends_on:
      - db
      - redis
    deploy:
      mode: replicated
      replicas: 4
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        failure_action: rollback
        monitor: 5s

volumes:
  lagos_bus_route-data:
  lagos_bus_route-redis-data:

secrets:
  psql-user:
    file: /secrets/psql-fake-password.txt
  psql-pw:
    file: /secrets/psql-fake-user.txt
  psql-db_name:
    file: /secrets/psql-fake-db_name.txt