# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2016-12-29 20:17
from __future__ import unicode_literals

import json
import logging
import os

from django.conf import settings
from django.db import IntegrityError, migrations


logger = logging.getLogger(__name__)


def forwards_func(apps, schema_editor):
    """populate the database with routes from route_node_to_busstop.csv
    You may think of versioning routes.json so that if it becomes so large
    such that having all its contents in memory is a problem, that does not
    adversely affect this function
    """
    Route = apps.get_model('routes', 'Route')
    project_dir = os.path.dirname(settings.BASE_DIR)
    routes_json_filename = '{project_dir}/routes/fixtures/routes.json'.format(
        project_dir=project_dir)

    with open(routes_json_filename) as json_data:
        routes = json.load(json_data)

    BusStop = apps.get_model('busstops', 'BusStop')
    if BusStop.objects.filter(id=routes[0]['busstop_id']).exists():
        try:
            Route.objects.bulk_create((Route(**node) for node in routes))
        except IntegrityError as exc:
            logger.debug(dict(
                msg=(
                    "Skipping bulk create.... Some routes already exist."
                    "Consider saving individually"),
                exception=exc
            ))


def reverse_func(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('routes', '0003_route'),
    ]

    operations = [
        migrations.RunPython(forwards_func, reverse_func),
    ]
