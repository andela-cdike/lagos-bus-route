"""Populate production's route table"""
# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2016-12-29 20:17
from __future__ import unicode_literals

import json
import logging
import os

from django.conf import settings
from django.db import IntegrityError, migrations


logger = logging.getLogger(__name__)


def make_compatible(BusStop, route):
    """Convert field dictionary received from dumped route json
    into a format that the Route constructor would accept by
    changing busstop field to busstop_id
    """
    route['busstop_id'] = BusStop.objects.get(place_id=route['place_id']).id
    del route['place_id']
    return route


def forwards_func(apps, schema_editor):
    """populate the database with routes from route_node_to_busstop.csv
    You may think of versioning routes.json so that if it becomes so large
    such that having all its contents in memory is a problem, that does not
    adversely affect this function
    """
    if os.getenv('ENVIRONMENT') == settings.PRODUCTION:
        BusStop = apps.get_model('busstops', 'BusStop')
        Route = apps.get_model('routes', 'Route')
        root_dir = os.path.dirname(os.path.dirname(settings.BASE_DIR))
        routes_json_filename = '{root_dir}/json_backups/routes/24-11-17.json'.format(
            root_dir=root_dir)

        with open(routes_json_filename) as json_data:
            routes = json.load(json_data)

        try:
            Route.objects.bulk_create((Route(
                **make_compatible(BusStop, route['fields'])
            ) for route in routes))
        except IntegrityError as exc:
            logger.debug(dict(
                msg=(
                    "Skipping bulk create.... Some routes already exist."
                    "Consider saving individually"),
                exception=exc
            ))


def reverse_func(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('routes', '0004_route'),
    ]

    operations = [
        migrations.RunPython(forwards_func, reverse_func),
    ]
